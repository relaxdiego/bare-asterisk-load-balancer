---
all:
  vars:
    lb1_private_ip: 172.31.8.192
    lb1_private_int: eth0

    lb2_private_ip: 172.31.9.39
    lb2_private_int: eth0

    k8s1_private_ip: 172.31.14.118 
    k8s1_private_int: eth0

    k8s2_private_ip: 172.31.4.167 
    k8s2_private_int: eth0

    # Virtual/Floating IP that will get assigned to the active keepalived node
    keepalived_external_vip_cidr: 54.179.84.86

    # Get this value by running `kubectl get svc -o wide` on one of the k8s nodes.
    # There's a sample k8s manifest in the manifests/ dir if you need one.
    target_k8s_node_port: 32175

    # https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html
    ansible_python_interpreter: /usr/bin/python3

  hosts:
    lb1:
      ansible_host: "{{ lb1_private_ip }}"
      ansible_connection: local
      keepalived_instances:
        external:
          interface: "{{ lb1_private_int }}"
          state: MASTER
          virtual_router_id: 10
          priority: 150
          advert_int: 1
          unicast_src_ip: "{{ lb1_private_ip }}"
          unicast_peers:
            - "{{ lb2_private_ip }}"
          vips:
            - "{{ keepalived_external_vip_cidr | default('127.0.2.1') }} dev {{ keepalived_external_interface | default('eth0') }}"
    lb2:
      ansible_host: "{{ lb2_private_ip }}"
      keepalived_instances:
        external:
          interface: "{{ lb2_private_int }}"
          state: BACKUP
          virtual_router_id: 10
          priority: 50
          advert_int: 1
          unicast_src_ip: "{{ lb2_private_ip }}"
          unicast_peers:
            - "{{ lb1_private_ip }}"
          vips:
            - "{{ keepalived_external_vip_cidr | default('127.0.2.1') }} dev {{ keepalived_external_interface | default('eth0') }}"
    k8s1:
      ansible_host: "{{ k8s1_private_ip }}"
    k8s2:
      ansible_host: "{{ k8s1_private_ip }}"

  children:
    load_balancers:
      hosts:
        lb1:
        lb2:
      vars:
        keepalived_virtual_servers:
         - ip: "{{ keepalived_external_vip_cidr | ipaddr('address') }}"
           port: 8080
           delay_loop: 2
           lb_algo: rr
           lvs_method: NAT
           protocol: 'TCP'
           real_servers:
             - ip: "{{ k8s1_private_ip }}"
               port: "{{ target_k8s_node_port }}"
             - ip: "{{ k8s2_private_ip }}"
               port: "{{ target_k8s_node_port }}"
